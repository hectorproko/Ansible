- name: Configuring Database #Second Play
  hosts: _NFS
  gather_facts: false
  remote_user: ec2-user

  vars_files:
    - /etc/ansible/vars/info.yml

  tasks:
    - name: Pinging
      ping:
      
    - name: Install MySQL
      package:
        name: 
          - mysql #do we need it? #this is client, will remove later after testing
          - mysql-server
        state: present

    - name: Start msyql
      ansible.builtin.service:
        name: mysqld
        state: started
        enabled: yes

    - name: Make sure pymysql is present
      pip:
        name: pymysql
        state: present

    - name: Create a new database with name 'tooling'
      mysql_db:
        name: tooling
        state: present
        
    - name: Create database user with name 'webaccess' and password '12345' with all database privileges
      mysql_user:
        name: webaccess
        password: 12345
        priv: '*.*:ALL' #all database privileges
        host: 172.31.80.0/20 #the host part of the username, subnet
        state: present
        
    #This is not working    
    - name: Input tooling credentials
      ansible.builtin.replace:
        path: /mnt/apps/html/functions.php
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      loop:
        - { regexp: '^admin', line: "webaccess" }
        - { regexp: '^admin', line: "12345" }
    - name: bypass, replace module not having desired effect
      raw: sed -i '5 s/admin/{{ item }}/' /mnt/apps/html/functions.php
      loop:
        - webaccess
        - 123456
        

     #$db = mysqli_connect('mysql.tooling.svc.cluster.local', 'admin', 'admin', 'tooling');
     #sudo mysql tooling < tooling/tooling-db.sql  #create table users
     #/mnt/apps/html/functions.php
     #grep -i '$db = mysqli_connect' /mnt/apps/html/functions.php | sed -n 's/admin/webaccess/g')
     #sudo grep -i '$db = mysqli_connect' /mnt/apps/html/functions.php | sed 's/admin/webaccess/'
     
     #sed -i '5 s/admin/webaccess/' /mnt/apps/html/functions.php