- name: Start Configuring NFS #Second Play
  hosts: _NFS
  gather_facts: false
  remote_user: ec2-user

  vars_files:
    - /etc/ansible/vars/info.yml

  tasks:
    - name: Pinging
      ping:

    - name: Partitioning
      parted:
        device: "{{ item }}"
        number: 1
        state: present
        fs_type: ext4
      loop:
        - /dev/xvdf
        - /dev/xvdg
        - /dev/xvdh

    - name: Install lvm2 dependency, nfs-utils
      package:
        name: 
          - lvm2
          - nfs-utils
          - git
        state: present

    - name: Start NFS on boot
      ansible.builtin.service:
        name: nfs-server
        enabled: yes

    - name: Create VG
      lvg:
        vg: "{{ item.vg }}"
        pvs: "{{ item.pvs }}"
      loop:
        - { vg: 'vg-apps', pvs: '/dev/xvdf1'}
        - { vg: 'vg-logs', pvs: '/dev/xvdg1'}
        - { vg: 'vg-opt', pvs: '/dev/xvdh1'}

    - name: Create LV
      lvol:
        vg: "{{ item.vg }}"
        lv: "{{ item.lv }}"
        size: 100%FREE
        shrink: no
      loop:
        - { vg: 'vg-apps', lv: 'lv-apps'}
        - { vg: 'vg-logs', lv: 'lv-logs'}
        - { vg: 'vg-opt', lv: 'lv-opt'}
      ignore_errors: yes #for testing purpose, when running playbook twice this fails
      
    - name: Format
      filesystem:
        fstype: xfs
        dev: "{{ item }}"
      loop:
        - /dev/vg-apps/lv-apps
        - /dev/vg-logs/lv-logs
        - /dev/vg-opt/lv-opt
    #------------------------------------------------
    - name: Creating mounting directories
      file:
        path: "{{ item }}"
        state: directory
        owner: nobody
        group: nobody
        mode: '0777'
      loop:
        - /mnt/apps
        - /mnt/logs
        - /mnt/opt
#start enable nfs-server.service

    - name: Mount
      mount:
        path: "{{ item.dir}}"
        src: "{{ item.lv }}"
        fstype: xfs
        state: mounted
      loop:
        -  { dir: '/mnt/apps', lv: '/dev/vg-apps/lv-apps' }
        -  { dir: '/mnt/logs', lv: '/dev/vg-logs/lv-logs' }
        -  { dir: '/mnt/opt', lv: '/dev/vg-opt/lv-opt' }

    - name: daemon-reload
      systemd:
        name: nfs-server
        state: restarted
        daemon_reload: yes
          
    - name: exports 
      lineinfile:
        path: /etc/exports
        line: "{{ item }}"
      loop:         #subnet
        - /mnt/apps 172.31.80.0/20(rw,sync,no_all_squash,no_root_squash)
        - /mnt/logs 172.31.80.0/20(rw,sync,no_all_squash,no_root_squash)
        - /mnt/opt 172.31.80.0/20(rw,sync,no_all_squash,no_root_squash)

    - name: exportfs -arv
      shell:
        cmd: exportfs -arv
    
    - name: Changing dir owner/permission #running it once doesnt change owner/permission
      file:
        path: "{{ item }}"
        state: directory
        owner: nobody
        group: nobody
        mode: '0777'
      loop:
        - /mnt/apps
        - /mnt/logs
        - /mnt/opt
        
    - name: Git
      ansible.builtin.git:
        repo: 'https://github.com/hectorproko/tooling.git'
        dest: /home/ec2-user/tooling 

    - name: Copydir #This turns apps back to root
      command: cp -R /home/ec2-user/tooling/html /mnt/apps   
      
#-----------Database Configuration

    - name: Install MySQL
      package:
        name: 
          - mysql #do we need it? #this is client, will remove later after testing
          - mysql-server
        state: present

    - name: Start msyql
      ansible.builtin.service:
        name: mysqld
        state: started
        enabled: yes

    - name: Make sure pymysql is present
      pip:
        name: pymysql
        state: present

    - name: Create a new database with name 'tooling'
      mysql_db:
        name: tooling
        state: present
        
    #Name Runnign script
    - name: Running script to insert in tooling
      raw: mysql tooling < /home/ec2-user/tooling/tooling-db.sql
      
    - name: Inserting a user to test
      community.mysql.mysql_query:
        login_db: tooling
        query: INSERT INTO `users` (`id`, `username`, `password`, `email`, `user_type`, `status`) VALUES (2, 'myuser', '12345', 'user@mail.com', 'admin', '1');   
     
    - name: Create database user with name 'webaccess' and password '12345' with all database privileges
      mysql_user:
        name: webaccess
        password: 12345
        priv: '*.*:ALL' #all database privileges
        host: 172.31.80.0/20 #the host part of the username, subnet
        state: present
        
    #This is not working    
    - name: Input tooling credentials
      ansible.builtin.replace:
        path: /mnt/apps/html/functions.php
        regexp: "{{ item.regexp }}"
        replace: "{{ item.line }}"
      loop:
        - { regexp: '^admin', line: "webaccess" }
        - { regexp: '^admin', line: "12345" }
    - name: bypass, replace module not having desired effect
      raw: sed -i '5 s/admin/{{ item }}/' /mnt/apps/html/functions.php
      loop:
        - webaccess
        - 123456
        
    
#There /mnt seems to loose teh nobody:nobody adn permission apps confirmed for now        
#Important note:Â In order for NFS server to be accessible from your client, you must also open following ports: TCP 111, UDP 111, UDP 2049
