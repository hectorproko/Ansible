- name: Start Configuring #Second Play
  hosts: _NFS
  gather_facts: false
  remote_user: ec2-user

  vars_files:
    - vars/info.yml

  tasks:
    - name: Pinging
      ping:

    - name: Partitioning
      parted:
        device: "{{ item }}"
        number: 1
        state: present
        fs_type: ext4
      loop:
        - /dev/xvdf
        - /dev/xvdg
        - /dev/xvdh

    - name: Install lvm2 dependency, nfs-utils
      package:
        name: 
          - lvm2
          - nfs-utils
        state: present

    - name: Start NFS on boot
      ansible.builtin.service:
        name: nfs-server
        enabled: yes

    - name: Create VG
      lvg:
        vg: "{{ item.vg }}"
        pvs: "{{ item.pvs }}"
      loop:
        - { vg: 'vg-apps', pvs: '/dev/xvdf1'}
        - { vg: 'vg-logs', pvs: '/dev/xvdg1'}
        - { vg: 'vg-opt', pvs: '/dev/xvdh1'}

    - name: Create LV
      lvol:
        vg: "{{ item.vg }}"
        lv: "{{ item.lv }}"
        size: 100%FREE
      loop:
        - { vg: 'vg-apps', lv: 'lv-apps'}
        - { vg: 'vg-logs', lv: 'lv-logs'}
        - { vg: 'vg-opt', lv: 'lv-opt'}
      ignore_errors: yes #for testing purpose, when running playbook twice this fails
      
    - name: Format
      filesystem:
        fstype: xfs
        dev: "{{ item }}"
      loop:
        - /dev/vg-apps/lv-apps
        - /dev/vg-logs/lv-logs
        - /dev/vg-opt/lv-opt
    #------------------------------------------------
    - name: Creating mounting directories
      file:
        path: "{{ item }}"
        state: directory
        owner: nobody
        group: nobody
        mode: '0777'
      loop:
        - /mnt/apps
        - /mnt/logs
        - /mnt/opt
#start enable nfs-server.service

    - name: Mount
      mount:
        path: "{{ item.dir}}"
        src: "{{ item.lv }}"
        fstype: xfs
        state: mounted
      loop:
        -  { dir: '/mnt/apps', lv: '/dev/vg-apps/lv-apps' }
        -  { dir: '/mnt/logs', lv: '/dev/vg-logs/lv-logs' }
        -  { dir: '/mnt/opt', lv: '/dev/vg-opt/lv-opt' }

    - name: fstab
      lineinfile:
        path: /etc/fstab
        line: "{{ item }}"
      loop:
        - /dev/vg-apps/lv-apps /mnt/apps xfs defaults 0 0
        - /dev/vg-logs/lv-logs /mnt/logs xfs defaults 0 0
        - /dev/vg-opt/lv-opt /mnt/opt xfs defaults 0 0

    - name: daemon-reload
      systemd:
        name: nfs-server
        state: restarted
        daemon_reload: yes
        
    #mistake?, confirmed, can delete
    #There is module for this #Repeated, wont change now it works
    #- name: fstab #this doesnt show on "mount" so it is not active or neede? Lets try commenting
      #lineinfile:
        #path: /etc/fstab
        #line: "{{ item }}"
      #loop:
        #- 172.31.88.84:/mnt/apps /var/www nfs defaults 0 0
        #- 172.31.88.84:/mnt/logs /var/log/httpd/ nfs defaults 0 0
        
    - name: exports 
      lineinfile:
        path: /etc/exports
        line: "{{ item }}"
      loop:         #subnet
        - /mnt/apps 172.31.80.0/20(rw,sync,no_all_squash,no_root_squash)
        - /mnt/logs 172.31.80.0/20(rw,sync,no_all_squash,no_root_squash)
        - /mnt/opt 172.31.80.0/20(rw,sync,no_all_squash,no_root_squash)

    - name: exportfs -arv
      shell:
        cmd: exportfs -arv
    
    - name: Changing dir owner/permission #running it once doesnt change owner/permission
      file:
        path: "{{ item }}"
        state: directory
        owner: nobody
        group: nobody
        mode: '0777'
      loop:
        - /mnt/apps
        - /mnt/logs
        - /mnt/opt
        
        
#Important note:Â In order for NFS server to be accessible from your client, you must also open following ports: TCP 111, UDP 111, UDP 2049
